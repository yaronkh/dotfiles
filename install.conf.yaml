- defaults:
    link:
      relink: true
      relative: false
      create: true

- shell:
  - [ git submodule update --init --recursive, Installing submodules]

- clean:
    '~':
    ~/.config:
      recursive: true

- create:
    - ~/Downloads
    - ~/.config/atuin
    - ~/dotfiles/build/bin
    - ~/dotfiles/bat
    - ~/dotfiles/build/lib/nvim

- link:
    #shell
    ~/.bashrc: nvidia/bashrc
    ~/.zshrc: etczsh/zshrc
    ~/.oh-my-zsh: ohmyzsh
    ~/.oh-my-zsh/custom/aliases.zsh: etczsh/aliases.zsh
    ~/.oh-my-zsh/custom/macos.zsh: etczsh/macos.zsh
    ~/.face: face

    #git
    ~/.gitconfig: nvidia/gitconfig

    #terminal
    ~/.config/alacritty: alacritty_conf

    #fzf
    ~/.fzf: fzf

    #tmux
    ~/.tmux/plugins/tpm: tpm

    #clang things
    ~/.config/clangd: nvidia/clangd
    ~/.clang-tidy: nvidia/clang-tidy
    ~/.clang-format: nvidia/clang-format

    #neovimn
    ~/.config/nvim: nvim

    #nix
    #~/.config/nix: nix

    #pyenv
    ~/.pyenv: pyenv
    ~/dotfiles/pyenv/plugins/pyenv-virtualenv: pyenv-virtualenv

    #fonts
    ~/.fonts/source-code-pro: source-code-pro

    #colorgcc
    ~/dotfiles/build/bin/gcc: ~/dotfiles/utils/colorgcc.pl
    ~/dotfiles/build/bin/cc: ~/dotfiles/utils/colorgcc.pl
    ~/dotfiles/build/bin/make: ~/dotfiles/utils/colorgcc.pl
    ~/.colorgccrc: ~/dotfiles/etc_clang/colorgccrc.txt

    #nvim runpath
    ~/dotfiles/build/lib/nvim/lua: ~/dotfiles/nvim/lua


- shell:
  - [install_me/install_ubuntu_packages.sh, verify that all prereq installed (on error run this command as root) ]
  - [ ~/dotfiles/etczsh/make_default_shell.sh, set zsh as default shell ]
  - [ ~/dotfiles/etczsh/install_zsh_plugins.sh install, install zsh plugins ]
  - [ test -f ~/.tmux.conf || cp ~/dotfiles/tmux.conf ~/.tmux.conf, setting tmux local conf]
  - [mkdir -p ~/.config/atuin && cp atuin/* ~/.config/atuin/, force update atuin conf]
  - [curl --proto '=https' --tlsv1.2 -LsSf https://setup.atuin.sh | sh, install atuin]
  - [yes | ~/.fzf/install, install fzf]
  - [~/dotfiles/update_pyenv_nvim.sh 3.13.2, update and install nvim environment]
  - [\. "$HOME/dotfiles/nvm/nvm.sh" && nvm install 22, install nodejs]
  - [install_me/install_tmux2.sh, installing tmux]
  - [install_me/install_neovim2.sh, install neovim]
  - [ curl https://sh.rustup.rs -sSf > /tmp/rustup.sh && sh /tmp/rustup.sh -y, install rust]
  - [./install_bat.sh, install bat]
  - [ ~/.cargo/bin/cargo install --locked --root ~/dotfiles/build git-delta, install git-delta]
  - [ ~/.cargo/bin/cargo install --locked --root ~/dotfiles/build alacritty, install alacritty]
  - [ ~/.cargo/bin/cargo install --locked --root ~/dotfiles/build lsd, install lsd]
  - [ ~/.cargo/bin/cargo install --locked --root ~/dotfiles/build fd-find, install fd file finder]
  - [ ~/.cargo/bin/cargo install --locked --root ~/dotfiles/build procs, install procs]
  - [install_me/install_nerd_fonts.sh, install nerd fonts]
  - [fc-cache -fv ~/.fonts/, update cache with fonts]
  - [\. "$HOME/dotfiles//nvm/nvm.sh" && npm i -g bash-language-server, install bash-language-server]
  - [\. "$HOME/dotfiles//nvm/nvm.sh" && npm install -g dockerfile-language-server-nodejs, install dockerfile-language-server-nodejs]
  - [tldr --update, update tldr]
  - [curl -sSfL https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | sh, install zoxide]
  - [ bash <(curl -sL https://raw.githubusercontent.com/denisidoro/navi/master/scripts/install), install navi]
  - [ curl -sSL https://raw.githubusercontent.com/tj/git-extras/main/install.sh | sudo bash /dev/stdin, install git-extras]
