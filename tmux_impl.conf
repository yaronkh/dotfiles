#tested on tmux 3.1 next
set-option -g prefix C-b

set -g mouse on
set -g base-index 1
set -sg escape-time 0
set-option -g mouse on
set-option -g history-limit 200000
set -g mouse on
setw -g mode-keys vi

bind -n C-l "send-keys C-l ; run 'sleep 0.1' ; clear-history"

#set-option -ga terminal-overrides ",xterm-256color:Tc"
#set-option -ga terminal-overrides ",rxvt-unicode-256color:Tc"
set-option -ag terminal-overrides ",xterm-256color:Ms=\\E]52;c;%p2%s\\7"

set -g focus-events on
#switch to full screen mode (per pane mode)
bind-key F2 'run "~/dotfiles/tmux_stuff/toggle_full_screen.sh #{pane_id} toggle"'
#hook for test-hide border (fill screen mode)
set-hook -g pane-focus-in 'run "~/dotfiles/tmux_stuff/toggle_full_screen.sh #{pane_id}"'

#set-hook -g pane-focus-in 'set pane-border-status bottom'
#set-hook -g client-attached 'run-shell "~/.tmux/scripts/resize-adaptable.sh -p 50 -l main-vertical"'
#set-hook -g pane-focus-in "run 'echo I #{pane_id} $(date) >>/tmp/focus'"
#set-hook -g pane-focus-out "run 'echo O #{pane_id} $(date) >>/tmp/focus'"

#session mononitor, creation and deletion
# set-hook -g session-created[0] "run-shell -d 1 'exec ~/dotfiles/tmux/sess_mon.bash #{session_name}'"

set -g popup-style bg=black,fg=yellow
set -g popup-border-style bg=black,fill=black
set -g popup-border-lines rounded
set -g update-environment "DISPLAY XAUTHORITY SSH_AUTH_SOCK"
set -g window-size smallest

set -g @resurrect-capture-pane-contents 'on'
run-shell ~/.files/tmux/tmux-resurrect/resurrect.tmux

unbind-key MouseDown2Pane
bind-key -n MouseDown2Pane run "tmux save-buffer - | ~/dotfiles/tmux/yank.bash"
bind-key -n MouseDown3Pane run-shell "~/dotfiles/right-click-menu.sh"

#enable force update for vim when tmux get focus
set -g focus-events on

# https://github.com/neovim/neovim/pull/3165 workaround for cursor shape:
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

set -s user-keys[0] "\e[5;30006~"
bind-key -n User0 run "echo yaron"

set -s user-keys[1] "\e[5;30007~"

# set clipboard on, means that clipboard will be passed vi osc52 standard, and the terminal should be configured and support that option.
set -s set-clipboard on

set-option -g set-titles on
set-option -g set-titles-string "#S / #W / #T"

set -s user-keys[2] "\e[5;30009~" # key: Subtract, mods: Control | Alt
bind-key -n User2  resize-pane -U 3

set -s user-keys[3] "\e[5;30010~" # key: Equals,   mods: Control | Alt
bind-key -n User3  resize-pane -D 3

set -s user-keys[4] "\e[5;30012~" # key: LBracket, mods: Control | Alt
bind-key -n User4  resize-pane -L 3

set -s user-keys[5] "\e[5;30013~" # key: RBracket, mods: Control | Alt
bind-key -n User5  resize-pane -R 3

bind-key -n User6  select-pane -m
set -s user-keys[6] "\e[5;30015~" # C-S-m

bind-key -n C-F12 select-pane -m
bind-key -n C-F11 join-pane
bind-key -n C-F10 join-pane -h

set -s user-keys[7] "\e[5;30016~" # C-S-j
bind-key -n User7  command-prompt -p "join-pane (below - vert split)"  "join-pane %%"

set -s user-keys[8] "\e[5;30017~" # C-S-u
bind-key -n User8  command-prompt -p "join-pane (above - vert split)"  "join-pane -b %%"

set -s user-keys[9] "\e[5;30018~" # C-S-t
bind-key -n User9  command-prompt -p "join-pane (right - horiz split)" "join-pane -h %%"

set -s user-keys[10] "\e[5;30019~" # C-S-y
bind-key -n User10 command-prompt -p "join-pane (left - horiz split)" "join-pane -bh %%"

bind-key ` run-shell '~/dotfiles/pspane/pspane.sh #{pane_id} #{pane_pid}'
bind-key v display-popup -E "bash -ic 'pyenv activate nvim >/dev/null 2>&1 && exec python ~/dotfiles/vimmux/vimmux.py'"
bind-key g run-shell '~/dotfiles/guard/guardwrap.bash #{pane_id} #{pane_pid}'
bind-key m run-shell '~/dotfiles/vimmux/movefile.sh #{pane_id}'
bind-key o run-shell '~/dotfiles/vimmux/ipython-show-tb.sh #{pane_id}'
bind-key h splitw -h 'htop'

bind-key Enter copy-mode
bind-key X confirm-before kill-session
bind-key x kill-pane
bind-key s command-prompt -I "" "rename-session -- '%%'"
bind-key r command-prompt -I "" "rename-window -- '%%'"
bind-key N command-prompt -I "" "new-session -s '%%'"
bind-key K respawn-pane -k

bind-key V split-window -h
bind-key S split-window -v
bind-key -n F11 send-keys C-l \; clear-history
bind-key -n M-\; last-pane

#bind-key M-- send-keys M--
#bind-key M-\ send-keys -l "\e\\"
#bind-key -n M-\ split-window -h -c '#{pane_current_path}'

set -s user-keys[11] "\e[5;30020~" # C-A--
set -s user-keys[11] "\u001B[5;30020~" # C-A--
set -s user-keys[12] "\e[5;30021~" # C-A-\
bind-key -n User11 split-window -b -v -c '#{pane_current_path}'
bind-key -n User12 split-window -b -h -c '#{pane_current_path}'

bind-key M-m set-option -g mouse on \; display 'Mouse: ON'
bind-key M-M set-option -g mouse off \; display 'Mouse: OFF'

bind-key F12 send-keys F12
bind-key -n F12 copy-mode

bind - move-pane -t '.-'
bind \\ move-pane -h -t '.-'

bind 1 swap-window -t 1
bind 2 swap-window -t 2
bind 3 swap-window -t 3

bind -n C-M-g resize-pane -L 3
bind -n C-M-h resize-pane -R 3
bind -n C-M-j resize-pane -U 3
bind -n C-M-m resize-pane -D 3

# Arrow pane move, conditinal on not being zoomed. Otherwise tmux unzooms automatically.
is_zoomed='echo "#{window_zoomed_flag}" | grep 1'
bind -n M-Left  if-shell "$is_zoomed" "" "select-pane -L"
bind -n M-Down  if-shell "$is_zoomed" "" "select-pane -D"
bind -n M-Up    if-shell "$is_zoomed" "" "select-pane -U"
bind -n M-Right if-shell "$is_zoomed" "" "select-pane -R"
bind M-Left  send-keys M-Left
bind M-Down  send-keys M-Down
bind M-Up    send-keys M-Up
bind M-Right send-keys M-Right

bind-key -n C-0 select-window -t :=0
bind-key -n C-1 select-window -t :=1
bind-key -n C-2 select-window -t :=2
bind-key -n C-3 select-window -t :=3
bind-key -n C-4 select-window -t :=4
bind-key -n C-5 select-window -t :=5
bind-key -n C-6 select-window -t :=6
bind-key -n C-7 select-window -t :=7
bind-key -n C-8 select-window -t :=8
bind-key -n C-9 select-window -t :=9
bind-key C-0 send-keys C-0
bind-key C-1 send-keys C-1
bind-key C-2 send-keys C-2
bind-key C-3 send-keys C-3
bind-key C-4 send-keys C-4
bind-key C-5 send-keys C-5
bind-key C-6 send-keys C-6
bind-key C-7 send-keys C-7
bind-key C-8 send-keys C-8
bind-key C-9 send-keys C-9

bind-key R source-file ~/.tmux.conf \; display 'Reloaded'
bind-key f command-prompt "find-window -- '%%'"

bind-key j command-prompt -p "join pane "  "join-pane %%"
bind-key J command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key S command-prompt -p "send pane to:"  "join-pane -t '%%'"

bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M

unbind -n -Tcopy-mode MouseDragEnd1Pane

set-window-option -g allow-passthrough on

bind-key -Tcopy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "tmux save-buffer - | ~/dotfiles/tmux_stuff/yank.bash > #{pane_tty};"
bind-key -Tcopy-mode-vi Enter send -X copy-pipe "tmux save-buffer - | ~/dotfiles/tmux/yank.bash > #{pane_tty};"
bind-key -Tcopy-mode-vi Home send-keys -X start-of-line
bind-key -Tcopy-mode-vi End  send-keys -X end-of-line

set -s user-keys[13] "\e[5;30014~" # C-Space
bind-key -Tcopy-mode-vi User13 send-keys -X begin-selection
bind-key -n User13 send-keys "\e[5;30014~"

set -g pane-border-status bottom
set -g pane-border-format "#P #[fg=#00ffff,bg=#003333,bold]#T"
set -g pane-border-format "#P #[fg=#00ffff,bold]#T"

set -g pane-border-style fg=white
set -g pane-active-border-style "bg=default fg=magenta"

## Design from http://www.hamvocke.com/blog/a-guide-to-customizing-your-tmux.conf/

######################
### DESIGN CHANGES ###
######################

# panes
set -g window-style bg=black

## Status bar design
# status line
set -g status-justify left
set -g status-bg blue
set -g status-fg blue
set -g status-interval 1


# messaging
set -g message-command-style fg=blue,bg=black

# Info on left (I don't have a session display for now)
set -g status-left ''

# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action any
set-option -g monitor-bell on

set -g default-terminal "screen-256color"

# The modes {
setw -g clock-mode-colour colour135
setw -g mode-style bold,fg=colour196,bg=colour238

set-window-option -g mode-style "fg=#000000 bg=#a0d0b0"

# }
# The panes {


# }
# The statusbar {

set -g status-position bottom
set -g status-bg black
set -g status-fg blue
set -g status-style dim
set -g status-left '#h:#S '
set -g status-right '#P #[fg=blue,bg=black,bold] %a %d.%m.%Y #[fg=blue,bg=black,bold]%H:%M:%S '
set -g status-right-length 50
set -g status-left-length 20

set -g allow-rename on
setw -g window-status-current-style fg=colour81,bold,bg=blue,dim
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

setw -g window-status-style fg=colour138,bg=colour235,none
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '


setw -g window-status-bell-style bold,fg=colour255,bg=colour1

# }
# The messages {

set -g message-style bold,fg=colour232,bg=colour166
# set -g pane-border-style fg=colour238
set -g pane-active-border-style fg=brightred

set -g @1password-copy-to-clipboard 'off'
set -g @1password-subdomain 'cloudendure'
set -g @1password-vault ''
set-option -g set-titles-string "#W: #T"
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'yardnsm/tmux-1password'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

run '~/.tmux/plugins/tpm/tpm'
# }
